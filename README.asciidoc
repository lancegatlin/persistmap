= Persistent Map
Lance Gatlin <lance.gatlin@gmail.com>
v2,02-Jan-2015
:blogpost-status: unpublished
:blogpost-categories: scala

*UNDER CONSTRUCTION*

An experimental partially persistent
(http://en.wikipedia.org/wiki/Persistent_data_structure) and thread-safe Map
that reifies time. The past may be queried but changes may only be made to "now"
 or in the "future".

* Full record of changes can be retrieved per item
* Changes are stored as an event stream

.Example
----
Welcome to Scala version 2.11.1 (Java HotSpot(TM) 64-Bit Server VM, Java 1.7.0_72).
Type in expressions to have them evaluated.
Type :help for more information.

scala> :load consoleImports
Loading consoleImports...
import org.joda.time._
import scala.concurrent._
import s_mach.concurrent._
import org.lancegatlin.persist._
import scala.concurrent.ExecutionContext.Implicits.global
m: org.lancegatlin.persist.Metadata = Metadata(me,None,2015-01-02T21:33:58.373Z)
p: org.lancegatlin.persist.PersistentMemoryMap[Int,String,Option[String]] = org.lancegatlin.persist.PersistentMemoryMap@4579d397
t1: org.joda.time.Instant = 2015-01-02T21:33:59.158Z

scala> p.now.toMap.get
res0: Map[Int,String] = Map(1 -> a, 2 -> b)

scala> p.now.find(1).get
res1: Option[String] = Some(a)

scala> p.now.replace(1,"aa").get
res2: Boolean = true

scala> p.now.find(1).get
res3: Option[String] = Some(aa)

scala> p.old(t1).find(1).get
res4: Option[String] = Some(a)

scala> val t2 = Instant.now()
t2: org.joda.time.Instant = 2015-01-02T21:34:53.754Z

scala> p.now.put(3,"c").get
res5: Boolean = true

scala> p.old(t2).find(3).get
res6: Option[String] = None

scala> p.now.find(3).get
res7: Option[String] = Some(c)

scala> p.now.deactivate(1).get
res8: Boolean = true

scala> p.now.find(1).get
res9: Option[String] = None

scala> p.old(t2).find(1).get
res10: Option[String] = Some(aa)

scala> p.now.toMap.get
res11: Map[Int,String] = Map(2 -> b,3 -> c)

scala> p.old(t2).toMap.get
res12: Map[Int,String] = Map(1 -> aa, 2 -> b)

scala> p.old(t1).toMap.get
res13: Map[Int,String] = Map(1 -> a, 2 -> b)

scala>
----
